#!/usr/bin/env ruby
# coding: utf-8
dhost = ENV['DRB_HOST'] || 'localhost'
require 'drb'
counterObj= DRbObject.new_with_uri  "druby://#{dhost}:9000"
file_name = ARGV[0]
ARGV.shift
@drb_args = ARGV
file_str = open(file_name){ |f| f.read }

begin 
  $stdout.print counterObj.eval("@drb_args = #{@drb_args};" + file_str)
rescue => e
  $stderr.print e
  $stderr.print "\n"
  if e.backtrace.first =~ /__drbcli__/
    $stderr.print "ERRO:#{file_name}:#{e.backtrace.first.split(/:([0-9]+):/)[1].to_i - 3}"
  else
    $stderr.print "ERRO:#{e.backtrace.first.split(/9000\) /).last}"
  end
end
if counterObj.eval("$st_outputs.empty?")
else
  $stdout.print counterObj.eval("'\n' + $st_outputs.join('\n')")
end
counterObj.eval("clear_st_outputs")
$stdout.print "\n"
$stderr.print counterObj.eval("$log_record.last").to_s.gsub(/connection closed/, '')

